<?php

/**
 * @file
 * Install, update and uninstall functions for the rehab installation profile.
 */


use Drupal\node\Entity\Node;
use Drupal\menu_link_content\Entity\MenuLinkContent;
use Drupal\paragraphs\Entity\Paragraph;
use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */
function rehab_install() {

  // Taxonomy Terms

  $newsTerm = Term::create([
    'name' => 'News',
    'vid' => 'article_type',
    'parent' => [],
    'status' => TRUE,
  ]);
  $newsTerm->save();

  $eventTerm = Term::create([
    'name' => 'Event',
    'vid' => 'article_type',
    'parent' => [],
    'status' => TRUE,
  ]);
  $eventTerm->save();

  // Nodes

  $nodeHome = Node::create([
      'type' => 'home',
      'title' => 'Welcome To The Site',
      'langcode' => 'en',
      'uid' => '1',
      'status' => 1,
      'body' => "<p>Lorem ipsum dolor met.</p>\r\n",
      'path' => [
        'alias' => '/welcome',
      ],
      'field_seo_and_social_media' => [
        Paragraph::create([
          'type' => 'seo_and_social_media',
          'field_meta_title' => 'Welcome',
          'field_meta_description' => 'Lorem ipsum dolor met.',
          'field_sitemap_importance' => '1.0',
        ]),
      ],
  ]);
  $nodeHome->save();

  $nodeAbout = Node::create([
      'type' => 'page',
      'title' => 'About Us',
      'langcode' => 'en',
      'uid' => '1',
      'status' => 1,
      'body' => "<p>Lorem ipsum dolor met.</p>\r\n",
      'field_seo_and_social_media' => [
        Paragraph::create([
          'type' => 'seo_and_social_media',
          'field_meta_title' => 'About Us',
          'field_meta_description' => 'Lorem ipsum dolor met.',
          'field_sitemap_importance' => '0.5',
        ]),
      ],
  ]);
  $nodeAbout->save();

  $nodeServices = Node::create([
      'type' => 'overview',
      'title' => 'Services',
      'langcode' => 'en',
      'uid' => '1',
      'status' => 1,
      'body' => "<p>Lorem ipsum dolor met.</p>\r\n",
      'field_seo_and_social_media' => [
        Paragraph::create([
          'type' => 'seo_and_social_media',
          'field_meta_title' => 'Services',
          'field_meta_description' => 'Lorem ipsum dolor met.',
          'field_sitemap_importance' => '0.8',
        ]),
      ],
      'field_children' => 'service',
  ]);
  $nodeServices->save();

  $nodeExampleService = Node::create([
      'type' => 'service',
      'title' => 'Example Service',
      'langcode' => 'en',
      'uid' => '1',
      'status' => 1,
      'body' => "<p>Lorem ipsum dolor met.</p>\r\n",
      'field_seo_and_social_media' => [
        Paragraph::create([
          'type' => 'seo_and_social_media',
          'field_meta_title' => 'Example Service',
          'field_meta_description' => 'Lorem ipsum dolor met.',
          'field_sitemap_importance' => '1.0',
        ]),
      ],
  ]);
  $nodeExampleService->save();

  $node403 = Node::create([
      'type' => 'error',
      'title' => '403 Access Denied',
      'langcode' => 'en',
      'uid' => '1',
      'status' => 1,
      'body' => "<p>Lorem ipsum dolor met.</p>\r\n",
      'field_seo_and_social_media' => [
        Paragraph::create([
          'type' => 'seo_and_social_media',
          'field_meta_title' => '403 Access Denied',
          'field_meta_description' => 'You do not have sufficient privileges to view this content.',
          'field_sitemap_importance' => '0.0',
        ]),
      ],
  ]);
  $node403->save();

  $node404 = Node::create([
      'type' => 'error',
      'title' => '404 Not Found',
      'langcode' => 'en',
      'uid' => '1',
      'status' => 1,
      'body' => "<p>Lorem ipsum dolor met.</p>\r\n",
      'field_seo_and_social_media' => [
        Paragraph::create([
          'type' => 'seo_and_social_media',
          'field_meta_title' => '404 Not Found',
          'field_meta_description' => 'The requested page was not found.',
          'field_sitemap_importance' => '0.0',
        ]),
      ],
  ]);
  $node404->save();

  $nodeBlog = Node::create([
      'type' => 'overview',
      'title' => 'Blog',
      'langcode' => 'en',
      'uid' => '1',
      'status' => 1,
      'body' => "<p>Lorem ipsum dolor met.</p>\r\n",
      'field_seo_and_social_media' => [
        Paragraph::create([
          'type' => 'seo_and_social_media',
          'field_meta_title' => 'Blog',
          'field_meta_description' => 'Lorem ipsum dolor met.',
          'field_sitemap_importance' => '0.5',
        ]),
      ],
      'field_children' => 'article',
  ]);
  $nodeBlog->save();

  $nodeExampleNews = Node::create([
      'type' => 'article',
      'title' => 'Example News Item',
      'langcode' => 'en',
      'uid' => '1',
      'status' => 1,
      'body' => "<p>Lorem ipsum dolor met.</p>\r\n",
      'field_seo_and_social_media' => [
        Paragraph::create([
          'type' => 'seo_and_social_media',
          'field_meta_title' => 'Example News Item',
          'field_meta_description' => 'Lorem ipsum dolor met.',
          'field_sitemap_importance' => '0.2',
        ]),
      ],
      'field_article_date' => date('Y-m-d'),
      'field_article_type' => $newsTerm->id(),
  ]);
  $nodeExampleNews->save();

  $nodeExampleEvent = Node::create([
      'type' => 'article',
      'title' => 'Example Event Item',
      'langcode' => 'en',
      'uid' => '1',
      'status' => 1,
      'body' => "<p>Lorem ipsum dolor met.</p>\r\n",
      'field_seo_and_social_media' => [
        Paragraph::create([
          'type' => 'seo_and_social_media',
          'field_meta_title' => 'Example Event Item',
          'field_meta_description' => 'Lorem ipsum dolor met.',
          'field_sitemap_importance' => '0.2',
        ]),
      ],
      'field_article_date' => date('Y-m-d'),
      'field_article_type' => $eventTerm->id(),
  ]);
  $nodeExampleEvent->save();

  $nodeTerms = Node::create([
      'type' => 'page',
      'title' => 'Terms Of Use',
      'langcode' => 'en',
      'uid' => '1',
      'status' => 1,
      'body' => "<p>Lorem ipsum dolor met.</p>\r\n",
      'field_seo_and_social_media' => [
        Paragraph::create([
          'type' => 'seo_and_social_media',
          'field_meta_title' => 'Terms Of Use',
          'field_meta_description' => 'Lorem ipsum dolor met.',
          'field_sitemap_importance' => '0.0',
        ]),
      ],
  ]);
  $nodeTerms->save();

  $nodeCookie = Node::create([
      'type' => 'page',
      'title' => 'Cookie Policy',
      'langcode' => 'en',
      'uid' => '1',
      'status' => 1,
      'body' => "<p>Lorem ipsum dolor met.</p>\r\n",
      'field_seo_and_social_media' => [
        Paragraph::create([
          'type' => 'seo_and_social_media',
          'field_meta_title' => 'Cookie Policy',
          'field_meta_description' => 'Lorem ipsum dolor met.',
          'field_sitemap_importance' => '0.0',
        ]),
      ],
  ]);
  $nodeCookie->save();

  $nodePrivacy = Node::create([
      'type' => 'page',
      'title' => 'Privacy Policy',
      'langcode' => 'en',
      'uid' => '1',
      'status' => 1,
      'body' => "<p>Lorem ipsum dolor met.</p>\r\n",
      'field_seo_and_social_media' => [
        Paragraph::create([
          'type' => 'seo_and_social_media',
          'field_meta_title' => 'Privacy Policy',
          'field_meta_description' => 'Lorem ipsum dolor met.',
          'field_sitemap_importance' => '0.0',
        ]),
      ],
  ]);
  $nodePrivacy->save();

  $nodeTeam = Node::create([
      'type' => 'page',
      'title' => 'Meet The Team',
      'langcode' => 'en',
      'uid' => '1',
      'status' => 1,
      'body' => "<p>Lorem ipsum dolor met.</p>\r\n",
      'field_seo_and_social_media' => [
        Paragraph::create([
          'type' => 'seo_and_social_media',
          'field_meta_title' => 'Meet The Team',
          'field_meta_description' => 'Lorem ipsum dolor met.',
          'field_sitemap_importance' => '0.2',
        ]),
      ],
  ]);
  $nodeTeam->save();

  $nodeHistory = Node::create([
      'type' => 'page',
      'title' => 'Our History',
      'langcode' => 'en',
      'uid' => '1',
      'status' => 1,
      'body' => "<p>Lorem ipsum dolor met.</p>\r\n",
      'field_seo_and_social_media' => [
        Paragraph::create([
          'type' => 'seo_and_social_media',
          'field_meta_title' => 'Our History',
          'field_meta_description' => 'Lorem ipsum dolor met.',
          'field_sitemap_importance' => '0.2',
        ]),
      ],
  ]);
  $nodeHistory->save();

  $nodeContact = Node::create([
      'type' => 'page',
      'title' => 'Contact Us',
      'langcode' => 'en',
      'uid' => '1',
      'status' => 1,
      'body' => "<p>Lorem ipsum dolor met.</p>\r\n",
      'field_seo_and_social_media' => [
        Paragraph::create([
          'type' => 'seo_and_social_media',
          'field_meta_title' => 'Contact Us',
          'field_meta_description' => 'Lorem ipsum dolor met.',
          'field_sitemap_importance' => '0.5',
        ]),
      ],
  ]);
  $nodeContact->save();

  // Admin toolbar menu

  $adminToolbarContent = MenuLinkContent::create([
    'title' => 'Content',
    'link' => ['uri' => 'route:<nolink>'],
    'menu_name' => 'admin-toolbar',
    'weight' => 0,
  ]);
  $adminToolbarContent->save();

  $adminToolbarContentHome = MenuLinkContent::create([
    'title' => 'Home',
    'link' => ['uri' => 'route:<front>'],
    'menu_name' => 'admin-toolbar',
    'weight' => 0,
    'parent' => $adminToolbarContent->getPluginId(),
  ]);
  $adminToolbarContentHome->save();

  $adminToolbarContentPages = MenuLinkContent::create([
    'title' => 'Pages',
    'link' => ['uri' => 'route:system.admin_content'],
    'menu_name' => 'admin-toolbar',
    'weight' => 1,
    'parent' => $adminToolbarContent->getPluginId(),
  ]);
  $adminToolbarContentPages->save();

  $adminToolbarAdministration = MenuLinkContent::create([
    'title' => 'Administration',
    'link' => ['uri' => 'route:<nolink>'],
    'menu_name' => 'admin-toolbar',
    'weight' => 1,
  ]);
  $adminToolbarAdministration->save();

  $adminToolbarAdministrationStructure = MenuLinkContent::create([
    'title' => 'Structure',
    'link' => ['uri' => 'route:system.admin_structure'],
    'menu_name' => 'admin-toolbar',
    'weight' => 0,
    'parent' => $adminToolbarAdministration->getPluginId(),
  ]);
  $adminToolbarAdministrationStructure->save();

  $adminToolbarAdministrationAppearance = MenuLinkContent::create([
    'title' => 'Appearance',
    'link' => ['uri' => 'route:system.themes_page'],
    'menu_name' => 'admin-toolbar',
    'weight' => 1,
    'parent' => $adminToolbarAdministration->getPluginId(),
  ]);
  $adminToolbarAdministrationAppearance->save();

  $adminToolbarAdministrationExtend = MenuLinkContent::create([
    'title' => 'Extend',
    'link' => ['uri' => 'route:system.modules_list'],
    'menu_name' => 'admin-toolbar',
    'weight' => 2,
    'parent' => $adminToolbarAdministration->getPluginId(),
  ]);
  $adminToolbarAdministrationExtend->save();

  $adminToolbarAdministrationConfig = MenuLinkContent::create([
    'title' => 'Configuration',
    'link' => ['uri' => 'route:system.admin_config'],
    'menu_name' => 'admin-toolbar',
    'weight' => 3,
    'parent' => $adminToolbarAdministration->getPluginId(),
  ]);
  $adminToolbarAdministrationConfig->save();

  $adminToolbarAdministrationPeople = MenuLinkContent::create([
    'title' => 'People',
    'link' => ['uri' => 'route:view.user_admin_people.page_1'],
    'menu_name' => 'admin-toolbar',
    'weight' => 4,
    'parent' => $adminToolbarAdministration->getPluginId(),
  ]);
  $adminToolbarAdministrationPeople->save();

  $adminToolbarAdministrationReports = MenuLinkContent::create([
    'title' => 'Reports',
    'link' => ['uri' => 'route:system.admin_reports'],
    'menu_name' => 'admin-toolbar',
    'weight' => 5,
    'parent' => $adminToolbarAdministration->getPluginId(),
  ]);
  $adminToolbarAdministrationReports->save();

  $adminToolbarAdministrationHelp = MenuLinkContent::create([
    'title' => 'Help',
    'link' => ['uri' => 'route:help.main'],
    'menu_name' => 'admin-toolbar',
    'weight' => 6,
    'parent' => $adminToolbarAdministration->getPluginId(),
  ]);
  $adminToolbarAdministrationHelp->save();

  $adminToolbarAccount = MenuLinkContent::create([
    'title' => 'Account',
    'link' => ['uri' => 'route:<nolink>'],
    'menu_name' => 'admin-toolbar',
    'weight' => 2,
  ]);
  $adminToolbarAccount->save();

  $adminToolbarAccountLogout = MenuLinkContent::create([
    'title' => 'Logout',
    'link' => ['uri' => 'route:user.logout'],
    'menu_name' => 'admin-toolbar',
    'weight' => 0,
  ]);
  $adminToolbarAccountLogout->save();


  // Client Toolbar menu

  $clientToolbarContent = MenuLinkContent::create([
    'title' => 'Content',
    'link' => ['uri' => 'route:<nolink>'],
    'menu_name' => 'client-admin-toolbar',
    'weight' => 0,
  ]);
  $clientToolbarContent->save();

  $clientToolbarContentHome = MenuLinkContent::create([
    'title' => 'Home',
    'link' => ['uri' => 'route:<front>'],
    'menu_name' => 'client-admin-toolbar',
    'weight' => 0,
    'parent' => $clientToolbarContent->getPluginId(),
  ]);
  $clientToolbarContentHome->save();

  $clientToolbarContentPages = MenuLinkContent::create([
    'title' => 'Pages',
    'link' => ['uri' => 'route:system.admin_content'],
    'menu_name' => 'client-admin-toolbar',
    'weight' => 1,
    'parent' => $clientToolbarContent->getPluginId(),
  ]);
  $clientToolbarContentPages->save();

  $clientToolbarConfig = MenuLinkContent::create([
    'title' => 'Configuration',
    'link' => ['uri' => 'route:<nolink>'],
    'menu_name' => 'client-admin-toolbar',
    'weight' => 1,
  ]);
  $clientToolbarConfig->save();

  $clientToolbarConfigRedirects = MenuLinkContent::create([
    'title' => 'URL Redirects',
    'link' => ['uri' => 'route:redirect.list'],
    'menu_name' => 'client-admin-toolbar',
    'weight' => 0,
    'parent' => $clientToolbarConfig->getPluginId(),
  ]);
  $clientToolbarConfigRedirects->save();

  $clientToolbarAccount = MenuLinkContent::create([
    'title' => 'Account',
    'link' => ['uri' => 'route:<nolink>'],
    'menu_name' => 'client-admin-toolbar',
    'weight' => 2,
  ]);
  $clientToolbarAccount->save();

  $clientToolbarAccountLogout = MenuLinkContent::create([
    'title' => 'Logout',
    'link' => ['uri' => 'route:user.logout'],
    'menu_name' => 'client-admin-toolbar',
    'weight' => 0,
    'parent' => $clientToolbarAccount->getPluginId(),
  ]);
  $clientToolbarAccountLogout->save();

  // Main menu

  $menuHome = MenuLinkContent::create([
    'title' => 'Home',
    'link' => ['uri' => 'route:<front>'],
    'menu_name' => 'main',
    'weight' => 0,
  ]);
  $menuHome->save();

  $menuAbout = MenuLinkContent::create([
    'title' => 'About',
    'link' => ['uri' => 'entity:node/' . $nodeAbout->id()],
    'menu_name' => 'main',
    'weight' => 1,
  ]);
  $menuAbout->save();

  $menuServices = MenuLinkContent::create([
    'title' => 'Services',
    'link' => ['uri' => 'entity:node/' . $nodeServices->id()],
    'menu_name' => 'main',
    'weight' => 2,
  ]);
  $menuServices->save();

  $menuExampleService = MenuLinkContent::create([
    'title' => 'Example Service',
    'link' => ['uri' => 'entity:node/' . $nodeExampleService->id()],
    'menu_name' => 'main',
    'weight' => 0,
    'parent' => $menuServices->getPluginId(),
  ]);
  $menuExampleService->save();

  $menuBlog = MenuLinkContent::create([
    'title' => 'Blog',
    'link' => ['uri' => 'entity:node/' . $nodeBlog->id()],
    'menu_name' => 'main',
    'weight' => 3,
  ]);
  $menuBlog->save();

  $menuNewsItem = MenuLinkContent::create([
    'title' => 'Example News Item',
    'link' => ['uri' => 'entity:node/' . $nodeExampleNews->id()],
    'menu_name' => 'main',
    'weight' => 0,
    'enabled' => FALSE,
    'parent' => $menuBlog->getPluginId(),
  ]);
  $menuNewsItem->save();

  $menuEventItem = MenuLinkContent::create([
    'title' => 'Example Event Item',
    'link' => ['uri' => 'entity:node/' . $nodeExampleEvent->id()],
    'menu_name' => 'main',
    'weight' => 1,
    'enabled' => FALSE,
    'parent' => $menuBlog->getPluginId(),
  ]);
  $menuEventItem->save();

  $menuTerms = MenuLinkContent::create([
    'title' => 'Terms Of Use',
    'link' => ['uri' => 'entity:node/' . $nodeTerms->id()],
    'menu_name' => 'footer',
    'weight' => 0,
  ]);
  $menuTerms->save();

  $menuCookie = MenuLinkContent::create([
    'title' => 'Cookie Policy',
    'link' => ['uri' => 'entity:node/' . $nodeCookie->id()],
    'menu_name' => 'footer',
    'weight' => 1,
  ]);
  $menuCookie->save();

  $menuPrivacy = MenuLinkContent::create([
    'title' => 'Privacy Policy',
    'link' => ['uri' => 'entity:node/' . $nodePrivacy->id()],
    'menu_name' => 'footer',
    'weight' => 2,
  ]);
  $menuPrivacy->save();

  $menuTeam = MenuLinkContent::create([
    'title' => 'Team',
    'link' => ['uri' => 'entity:node/' . $nodeTeam->id()],
    'menu_name' => 'main',
    'weight' => 0,
    'parent' => $menuAbout->getPluginId(),
  ]);
  $menuTeam->save();

  $menuHistory = MenuLinkContent::create([
    'title' => 'History',
    'link' => ['uri' => 'entity:node/' . $nodeHistory->id()],
    'menu_name' => 'main',
    'weight' => 1,
    'parent' => $menuAbout->getPluginId(),
  ]);
  $menuHistory->save();

  $menuContact = MenuLinkContent::create([
    'title' => 'Contact',
    'link' => ['uri' => 'entity:node/' . $nodeContact->id()],
    'menu_name' => 'main',
    'weight' => 4,
  ]);
  $menuContact->save();

  $menu403 = MenuLinkContent::create([
    'title' => '403 Access Denied',
    'link' => ['uri' => 'entity:node/' . $node403->id()],
    'menu_name' => 'hidden',
    'weight' => 0,
  ]);
  $menu403->save();

  $menu404 = MenuLinkContent::create([
    'title' => '404 Not Found',
    'link' => ['uri' => 'entity:node/' . $node404->id()],
    'menu_name' => 'hidden',
    'weight' => 1,
  ]);
  $menu404->save();

  // Generate pathauto references after the menu links (as required by patterns).
  $pathGenerator = \Drupal::service('pathauto.generator');

  $pathGenerator->updateEntityAlias($nodeAbout, 'update');
  $pathGenerator->updateEntityAlias($nodeServices, 'update');
  $pathGenerator->updateEntityAlias($nodeExampleService, 'update');
  $pathGenerator->updateEntityAlias($node403, 'update');
  $pathGenerator->updateEntityAlias($node404, 'update');
  $pathGenerator->updateEntityAlias($nodeBlog, 'update');
  $pathGenerator->updateEntityAlias($nodeExampleNews, 'update');
  $pathGenerator->updateEntityAlias($nodeExampleEvent, 'update');
  $pathGenerator->updateEntityAlias($nodeTerms, 'update');
  $pathGenerator->updateEntityAlias($nodeCookie, 'update');
  $pathGenerator->updateEntityAlias($nodePrivacy, 'update');
  $pathGenerator->updateEntityAlias($nodeTeam, 'update');
  $pathGenerator->updateEntityAlias($nodeHistory, 'update');
  $pathGenerator->updateEntityAlias($nodeContact, 'update');
}
